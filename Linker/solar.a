;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.0 Evaluation
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 09.09.2013
;Author  : Freeware, for evaluation and non-commercial use only
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 1,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;#define seg_a PORTD.3
;#define seg_b PORTB.0
;#define seg_c PORTD.5
;#define seg_d PORTD.7
;#define seg_e PORTB.6
;#define seg_f PORTD.2
;#define seg_g PORTB.7
;#define seg_h PORTD.6
;#define com_cat1 PORTB.4
;#define com_cat2 PORTB.5
;#define com_cat3 PORTB.3
;
;#define panel_sw PORTB.1
;#define load_sw PORTB.2
;#define load_led PORTD.4
;#define panel_led PORTD.1
;
;
;// Declare your global variables here
;unsigned int voltage;
;unsigned int TOP = 0x02ff; //ICR1H + ICR1L
;unsigned int GOAL = 1360;
;unsigned int DELTA_GOAL = 2;
;
;// ADC interrupt service routine
;interrupt [ADC_INT] void adc_isr(void)
; 0000 0036 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0037         unsigned int  adc_data;
; 0000 0038         unsigned int  counter_value;
; 0000 0039         unsigned int delta;
; 0000 003A         adc_data = ADCW;
;PCODE: $0000000F VOL: 0
;	adc_data -> R16,R17
;	counter_value -> R18,R19
;	delta -> R20,R21
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 003B         voltage = (long int)adc_data*1000/366;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003C 
; 0000 003D         counter_value = OCR1A;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003E         if (voltage > GOAL + DELTA_GOAL){
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 003F             delta = voltage - GOAL;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0040             if ( delta > 100) {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0041                 counter_value-=20;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0042             } else if (delta > 50){
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0043                 counter_value-=5;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0044             }
; 0000 0045             else if (delta > 20) {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0046                 counter_value-=2;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0047             } else {
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0048                 counter_value-=1;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0049             }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004A 
; 0000 004B             if (counter_value == 0 || counter_value > 0x3333) {
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004C                counter_value = 0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004D             }
; 0000 004E             OCR1A = counter_value;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 004F         }
; 0000 0050 
; 0000 0051         if (voltage < GOAL + DELTA_GOAL){
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0052             delta = GOAL - voltage;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0053             if ( delta > 100) {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0054                 counter_value+=20;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0055             } else if (delta > 50){
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0056                 counter_value+=5;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0057             }
; 0000 0058             else if (delta > 20) {
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0059                 counter_value+=2;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005A             } else {
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 005B                 counter_value+=1;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 005C             }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 005D 
; 0000 005E             if (counter_value > TOP) {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 005F                counter_value = TOP;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0060             }
; 0000 0061             OCR1A = counter_value;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0062             //panel_led = 0;
; 0000 0063             //panel_sw = 1;
; 0000 0064         }
; 0000 0065 
; 0000 0066          if (voltage > 1250){
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0067             load_led = 0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0068             load_sw = 1;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0069         }
; 0000 006A 
; 0000 006B         if (voltage < 1200){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 006C             load_led = 1;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 006D             load_sw = 0;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 006E         }
; 0000 006F }
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;
;
;
;
;void set_leds (char digit, char pos, char comma);
;
;
;
;void set_leds (char digit, char pos, char comma){
; 0000 0078 void set_leds (char digit, char pos, char comma){
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0079     #asm("cli")
;PCODE: $0000008B VOL: 0
;	digit -> Y+2
;	pos -> Y+1
;	comma -> Y+0
;PCODE: $0000008C VOL: 0
	cli
;PCODE: $0000008D VOL: 0
; 0000 007A     switch (pos){
;PCODE: $0000008E VOL: 0
; 0000 007B         case 1:
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 007C         com_cat1=1; com_cat2=0; com_cat3=0;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 007D         break;
;PCODE: $00000097 VOL: 0
; 0000 007E 
; 0000 007F         case 2:
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0080         com_cat1=0; com_cat2=1; com_cat3=0;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0081         break;
;PCODE: $000000A1 VOL: 0
; 0000 0082 
; 0000 0083         case 3:
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0084         com_cat1=0; com_cat2=0; com_cat3=1;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0085         break;
;PCODE: $000000AB VOL: 0
; 0000 0086     }
;PCODE: $000000AC VOL: 0
; 0000 0087 
; 0000 0088     if (comma==1) seg_h=1; else seg_h=0;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0089 
; 0000 008A     switch (digit){
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 008B         case 1:
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 008C             seg_a=0; seg_b=1; seg_c=1; seg_d=0; seg_e=0; seg_f=0; seg_g=0;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 008D             break;
;PCODE: $000000C8 VOL: 0
; 0000 008E         case 2:
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 008F             seg_a=1; seg_b=1; seg_c=0; seg_d=1; seg_e=1; seg_f=0; seg_g=1 ;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 0090             break;
;PCODE: $000000DA VOL: 0
; 0000 0091         case 3:
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0092             seg_a=1; seg_b=1; seg_c=1; seg_d=1; seg_e=0; seg_f=0; seg_g=1;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0093             break;
;PCODE: $000000EC VOL: 0
; 0000 0094         case 4:
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0095             seg_a=0; seg_b=1; seg_c=1; seg_d=0; seg_e=0; seg_f=1; seg_g=1;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0096             break;
;PCODE: $000000FE VOL: 0
; 0000 0097         case 5:
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0098             seg_a=1; seg_b=0; seg_c=1; seg_d=1; seg_e=0; seg_f=1; seg_g=1;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0099             break;
;PCODE: $00000110 VOL: 0
; 0000 009A         case 6:
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 009B             seg_a=1; seg_b=0; seg_c=1; seg_d=1; seg_e=1; seg_f=1; seg_g=1;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 009C             break;
;PCODE: $00000122 VOL: 0
; 0000 009D         case 7:
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 009E             seg_a=1; seg_b=1; seg_c=1; seg_d=0; seg_e=0; seg_f=0; seg_g=0;
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 009F             break;
;PCODE: $00000134 VOL: 0
; 0000 00A0         case 8:
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00A1             seg_a=1; seg_b=1; seg_c=1; seg_d=1; seg_e=1; seg_f=1; seg_g=1;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0000 00A2             break;
;PCODE: $00000146 VOL: 0
; 0000 00A3         case 9:
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00A4             seg_a=1; seg_b=1; seg_c=1; seg_d=1; seg_e=0; seg_f=1; seg_g=1;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00A5             break;
;PCODE: $00000158 VOL: 0
; 0000 00A6         case 0:
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00A7             seg_a=1; seg_b=1; seg_c=1; seg_d=1; seg_e=1; seg_f=1; seg_g=0;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00A8             break;
;PCODE: $0000016A VOL: 0
; 0000 00A9         case 10:    //switch off
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00AA             seg_a=0; seg_b=0; seg_c=0; seg_d=0; seg_e=0; seg_f=0; seg_g=0; seg_h=0;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00AB             break;
;PCODE: $0000017E VOL: 0
; 0000 00AC     }
;PCODE: $0000017F VOL: 0
; 0000 00AD     #asm("sei")
;PCODE: $00000180 VOL: 0
	sei
;PCODE: $00000181 VOL: 0
; 0000 00AE }
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;
;
;
;void main(void){
; 0000 00B2 void main(void){
;PCODE: $00000185 VOL: 0
; 0000 00B3     // Declare your local variables here
; 0000 00B4     char led_delay = 69;
; 0000 00B5     unsigned int volt_for_displ;
; 0000 00B6 
; 0000 00B7     // Input/Output Ports initialization
; 0000 00B8     // Port B initialization
; 0000 00B9     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00BA     // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 00BB     PORTB=0x00;
;	led_delay -> R17
;	volt_for_displ -> R18,R19
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00BC     DDRB=0xFF;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00BD 
; 0000 00BE     // Port C initialization
; 0000 00BF     // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=Out Func0=Out
; 0000 00C0     // State6=T State5=T State4=P State3=P State2=P State1=0 State0=0
; 0000 00C1     PORTC=0b00011110;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00C2     DDRC=0x03;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00C3 
; 0000 00C4     // Port D initialization
; 0000 00C5     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 00C6     // State7=0 State6=0 State5=0 State4=1 State3=1 State2=0 State1=0 State0=1
; 0000 00C7     PORTD=0b00011001;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00C8     DDRD=0xFF;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00C9 
; 0000 00CA    // Timer/Counter 1 initialization
; 0000 00CB     // Clock source: System Clock
; 0000 00CC     // Clock value: 4000,000 kHz
; 0000 00CD     // Mode: Ph. correct PWM top=ICR1
; 0000 00CE     // OC1A output: Non-Inverted PWM
; 0000 00CF     // OC1B output: Disconnected
; 0000 00D0     // Noise Canceler: Off
; 0000 00D1     // Input Capture on Falling Edge
; 0000 00D2     // Timer Period: 0,5 ms
; 0000 00D3     // Output Pulse(s):
; 0000 00D4     // OC1A Period: 0,5 ms Width: 0,05 ms
; 0000 00D5     // Timer1 Overflow Interrupt: Off
; 0000 00D6     // Input Capture Interrupt: Off
; 0000 00D7     // Compare A Match Interrupt: Off
; 0000 00D8     // Compare B Match Interrupt: Off
; 0000 00D9     TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (1<<WGM11) | (0<<WGM10);
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00DA     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00DB     TCNT1H=0x00;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00DC     TCNT1L=0x00;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00DD     ICR1H=0x02;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00DE     ICR1L=0xFF;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00DF     OCR1AH=0x00;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00E0     OCR1AL=0x10;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00E1     OCR1BH=0x00;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00E2     OCR1BL=0x00;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00E3 
; 0000 00E4    // ADC initialization
; 0000 00E5     // ADC Clock frequency: 7,813 kHz
; 0000 00E6     // ADC Voltage Reference: AVCC pin
; 0000 00E7     ADMUX=(0<<REFS1) | (1<<REFS0) | (0<<ADLAR)| (0<<MUX3) | (1<<MUX2) | (0<<MUX1) | (1<<MUX0);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00E8     ADCSRA=(1<<ADEN) | (1<<ADSC) | (1<<ADFR) | (1<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00E9 
; 0000 00EA     SFIOR=(0<<ACME);
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00EB 
; 0000 00EC 
; 0000 00ED     delay_ms(100);
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00EE 
; 0000 00EF     // Global enable interrupts
; 0000 00F0     #asm("sei")
;PCODE: $000001B1 VOL: 0
	sei
;PCODE: $000001B2 VOL: 0
; 0000 00F1 
; 0000 00F2     for (;;){
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00F3         unsigned int volt_tmp;
; 0000 00F4         char tis;
; 0000 00F5         char sot;
; 0000 00F6         char des;
; 0000 00F7         char ed;
; 0000 00F8 
; 0000 00F9         if (++led_delay == 70){
;PCODE: $000001B5 VOL: 0
;	volt_tmp -> Y+4
;	tis -> Y+3
;	sot -> Y+2
;	des -> Y+1
;	ed -> Y+0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00FA             volt_for_displ = voltage;
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00FB             led_delay = 0;
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00FC         }
; 0000 00FD 
; 0000 00FE         volt_tmp = volt_for_displ;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00FF         tis = volt_tmp/1000;
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0100         volt_tmp = volt_tmp - (int)tis*1000;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 0101         sot = volt_tmp/100;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0102         volt_tmp=volt_tmp-(int)sot*100;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 0103         des=volt_tmp/10;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 0104         volt_tmp=volt_tmp-(int)des*10;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 0105         ed=volt_tmp;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 0106 
; 0000 0107         set_leds(ed, 1, 0);
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 0108         delay_ms(1);
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0109         set_leds(des, 2, 0);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 010A         delay_ms(1);
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 010B         set_leds(sot, 3, 1);
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 010C         delay_ms(1);
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 010D         set_leds(10, 3, 0);
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 010E         delay_ms(1);
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 010F     }
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 0110 }
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
